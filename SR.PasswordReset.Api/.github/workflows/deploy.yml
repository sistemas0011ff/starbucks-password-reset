name: Deploy Lambda Function
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
env:
  AWS_REGION: us-east-2
  PROJECT_NAME: SR.PasswordReset.Api
  DOTNET_VERSION: '8.0.x'
  
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}
          
      - name: Install Amazon Lambda Tools
        run: dotnet tool install -g Amazon.Lambda.Tools
        
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
          
      - name: Debug Directory Structure
        run: |
          echo "Current working directory:"
          pwd
          echo "Contents of current directory:"
          ls -R
          echo "Contents of SR.PasswordReset.Api:"
          ls -R SR.PasswordReset.Api/
      
      - name: Restore dependencies
        working-directory: SR.PasswordReset.Api
        run: dotnet restore
        
      - name: Build with AOT
        working-directory: SR.PasswordReset.Api
        run: dotnet publish -c Release -r linux-x64 --self-contained true
          
      - name: Deploy to Lambda
        run: |
          cd SR.PasswordReset.Api
          pwd
          ls -la
          dotnet lambda deploy-serverless \
            --template serverless.template \
            --region ${{ env.AWS_REGION }} \
            --stack-name starbucks-password-reset \
            --s3-bucket lambda-builds-starbucks \
            --s3-prefix ${{ env.PROJECT_NAME }}/ \
            --msbuild-parameters "--self-contained true"